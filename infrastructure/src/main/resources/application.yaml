cache:
  type: cache2k
  names: admin-categories, admin-genres
  max-entries: 200
  ttl: 60 # seconds

elasticsearch:
  connect-timeout: 250
  socket-timeout: 1_000

graphql:
  graphiql: false

kafka:
  auto-create-topics: false
  bootstrap-servers: localhost:9092
  pool-timeout: 1_000
  consumers:
    categories:
      auto-offset-reset: earliest
      concurrency: 1
      id: kafka-listener-categories
      topics: adm_videos_postgresql.public.categories
      group-id: catalogo-de-videos
      max-attempts: 4
    cast-members:
      auto-offset-reset: earliest
      concurrency: 1
      id: kafka-listener-castmembers
      topics: adm_videos_postgresql.public.cast_members
      group-id: catalogo-de-videos
      max-attempts: 4

keycloak:
  token-uri: /protocol/openid-connect/token

rest-client:
  keycloak:
    base-url: ${keycloak.host}/realms/${keycloak.realm}
    read-timeout: 1_000
  categories:
    base-url: ${rest-client.base-url}/api/categories
    read-timeout: 1_000
  genres:
    base-url: ${rest-client.base-url}/api/genres
    read-timeout: 1_000

logging:
  level:
    root: warn
    com.lukinhasssss: info

server:
  port: 8081
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json # Comma-separated list of MIME types that should be compressed.
    min-response-size: 1024 # Minimum "Content-Length" value that is required for compression to be performed.
  undertow:
    threads:
      worker: 64 # Number of worker threads. The default is 8 times the number of I/O threads. Generally this should be reasonably high, at least 10 per CPU core: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2
      io: 4 # Number of I/O threads to create for the worker. The default is derived from the number of available processors.

spring:
  threads.virtual.enabled: true # Habilita o uso de threads virtuais. https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.spring-application.virtual-threads
  main.keep-alive: true # https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.spring-application.virtual-threads
  cache:
    cache-names: ${cache.names}
    type: ${cache.type}
  elasticsearch:
    uris: ${elasticsearch.uris}
    username: ${elasticsearch.username}
    password: ${elasticsearch.password}
    connect-timeout: ${elasticsearch.connect-timeout}
    socket-timeout: ${elasticsearch.socket-timeout}
  graphql:
    graphiql:
      enabled: ${graphql.graphiql}
  servlet:
    multipart:
      max-file-size: 10GB
      max-request-size: 100GB
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/certs
          issuer-uri: ${keycloak.host}/realms/${keycloak.realm}

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 25
      maxWaitDuration: 100
  instances:
    categories:
      baseConfig: default
    genres:
      baseConfig: default

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 250
      retryExceptions:
        - com.lukinhasssss.catalogo.domain.exception.InternalErrorException
        - org.springframework.web.client.ResourceAccessException
        - org.springframework.web.client.HttpServerErrorException.InternalServerError
        - org.springframework.web.client.HttpServerErrorException.GatewayTimeout
        - org.springframework.web.client.HttpServerErrorException.ServiceUnavailable
        - java.net.SocketTimeoutException
        - java.net.http.HttpConnectTimeoutException
        - java.net.http.HttpTimeoutException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
  instances:
    categories:
      baseConfig: default
    genres:
      baseConfig: default

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 100
      minimumNumberOfCalls: 20
      permittedNumberOfCallsInHalfOpenState: 10
      waitDurationInOpenState: 30s
      failureRateThreshold: 50
      slowCallRateThreshold: 70
      slowCallDurationThreshold: 2_000
      recordExceptions:
        - com.lukinhasssss.catalogo.domain.exception.InternalErrorException
        - org.springframework.web.client.ResourceAccessException
        - org.springframework.web.client.HttpServerErrorException.InternalServerError
        - org.springframework.web.client.HttpServerErrorException.GatewayTimeout
        - org.springframework.web.client.HttpServerErrorException.ServiceUnavailable
        - java.net.SocketTimeoutException
        - java.net.http.HttpConnectTimeoutException
        - java.net.http.HttpTimeoutException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
  instances:
    categories:
      baseConfig: default
    genres:
      baseConfig: default

management:
  info:
    build:
      enabled: true
    env:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  metrics:
    enable:
      jvm: true
    distribution:
      slo:
        http: 50ms, 100ms, 200ms, 300ms, 500ms, 1s
    tags:
      application: catalogo-de-videos
  prometheus:
    metrics:
      export:
        enabled: true

info:
  app:
    name: Catálogo de Vídeos
    description: Microsserviço de catálogo de vídeos
    version: 1.0
    java:
      version: 21